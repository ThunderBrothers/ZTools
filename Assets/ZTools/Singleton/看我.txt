――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
ZTools致力于快速的完成重复性工作及提供游戏内置的各种工具性框架


暗夜精灵jj 在2018.11.09更新v1.0版本
――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

概述：单实例模板 
――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
******** v1.0

基本版 
1.可用于多线程安全的单例模式的模板


――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
说明;
1.定义单例应用命名空间，继承Singleton<T>
2.定义至少一个构造函数
3.例如 SingleManager.GetInstance.str即可使用

――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
拓展;
1. 6种构造单实例方法https://www.jb51.net/article/100783.htm
2. Singleton中的Type.GetConstructors获取当前类的构造函数，Activator.CreateInstance使用与指定参数匹配程度最高的构造函数创建指定类型的实例  
   Singleton中的volatile 关键字指示字段可由操作系统、硬件或并发执行的线程在程序中进行修改修饰符，通常用于由多个线程访问而不使用lock语句
   来序列化访问的字段。使用 volatile 修饰符能够确保一个线程检索由另一线程写入的最新值。组合起来使用甚至可以远程创建dll的单实例
――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
